// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Oyster.Domain.Data;

#nullable disable

namespace Oyster.Domain.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Oyster.Domain.Models.ApiToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsageCount")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ApiTokens");
                });

            modelBuilder.Entity("Oyster.Domain.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("Roles")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 5, 6, 13, 42, 0, 0, DateTimeKind.Utc),
                            Email = "alvan@rahim.li",
                            FullName = "Alvan Rahimli",
                            PasswordHash = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            Roles = new[] { 1 }
                        });
                });

            modelBuilder.Entity("Oyster.Domain.Models.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Oyster.Domain.Models.BinArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal[]>("Location")
                        .IsRequired()
                        .HasColumnType("numeric[]");

                    b.Property<int>("ServiceAreaId")
                        .HasColumnType("integer");

                    b.Property<int>("WeightAddition")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ServiceAreaId");

                    b.ToTable("BinAreas");
                });

            modelBuilder.Entity("Oyster.Domain.Models.CalculatedRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("AreaSequenceIds")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int?>("AssignedTruckId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ServiceFinishTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ServiceStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssignedTruckId");

                    b.ToTable("CalculatedRoutes");
                });

            modelBuilder.Entity("Oyster.Domain.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TrashBinId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrashBinId");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Oyster.Domain.Models.ServiceArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServiceAreas");
                });

            modelBuilder.Entity("Oyster.Domain.Models.TrashBin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<int>("BinAreaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FilledLevel")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastPingTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BinAreaId");

                    b.ToTable("TrashBins");
                });

            modelBuilder.Entity("Oyster.Domain.Models.TrashBinSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FilledLevel")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TrashBinId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrashBinId");

                    b.ToTable("TrashBinSnapshots");
                });

            modelBuilder.Entity("Oyster.Domain.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal[]>("Location")
                        .IsRequired()
                        .HasColumnType("numeric[]");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("Oyster.Domain.Models.ApiToken", b =>
                {
                    b.HasOne("Oyster.Domain.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Oyster.Domain.Models.AuditLog", b =>
                {
                    b.HasOne("Oyster.Domain.Models.AppUser", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Oyster.Domain.Models.BinArea", b =>
                {
                    b.HasOne("Oyster.Domain.Models.ServiceArea", "ServiceArea")
                        .WithMany("BinAreas")
                        .HasForeignKey("ServiceAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceArea");
                });

            modelBuilder.Entity("Oyster.Domain.Models.CalculatedRoute", b =>
                {
                    b.HasOne("Oyster.Domain.Models.Truck", "AssignedTruck")
                        .WithMany()
                        .HasForeignKey("AssignedTruckId");

                    b.Navigation("AssignedTruck");
                });

            modelBuilder.Entity("Oyster.Domain.Models.Media", b =>
                {
                    b.HasOne("Oyster.Domain.Models.TrashBin", "TrashBin")
                        .WithMany("Medias")
                        .HasForeignKey("TrashBinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrashBin");
                });

            modelBuilder.Entity("Oyster.Domain.Models.TrashBin", b =>
                {
                    b.HasOne("Oyster.Domain.Models.BinArea", "BinArea")
                        .WithMany()
                        .HasForeignKey("BinAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BinArea");
                });

            modelBuilder.Entity("Oyster.Domain.Models.TrashBinSnapshot", b =>
                {
                    b.HasOne("Oyster.Domain.Models.TrashBin", "TrashBin")
                        .WithMany("Snapshots")
                        .HasForeignKey("TrashBinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TrashBin");
                });

            modelBuilder.Entity("Oyster.Domain.Models.AppUser", b =>
                {
                    b.Navigation("AuditLogs");
                });

            modelBuilder.Entity("Oyster.Domain.Models.ServiceArea", b =>
                {
                    b.Navigation("BinAreas");
                });

            modelBuilder.Entity("Oyster.Domain.Models.TrashBin", b =>
                {
                    b.Navigation("Medias");

                    b.Navigation("Snapshots");
                });
#pragma warning restore 612, 618
        }
    }
}
